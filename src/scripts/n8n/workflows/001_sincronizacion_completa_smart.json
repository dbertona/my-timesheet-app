{
  "createdAt": "2025-09-03T06:32:12.599Z",
  "updatedAt": "2025-09-08T15:43:03.000Z",
  "id": "XSYOmZ8mRuaXl6sg",
  "name": "001_sincronizacion_completa_smart",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "url": "={{ \n  'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/ProyectosTareas?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['job_task']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "33d9cee8-1210-488d-8674-5c37f6aecc72",
      "name": "HTTP - ProyectosTareas (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3392,
        1440
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst companyName = $('Resolve Company').first().json.companyName;\nconst jobSet = new Set(($('Build job set').first().json.jobNos || []).map(s => String(s).trim()));\n\nconst data = input[0].json;\nconst tareas = data.value || [];\nconst items = [];\n\nfor (const t of tareas) {\n  const job_no = String(t.projectNo ?? t.jobNo ?? t.job_no ?? '').trim();\n  const no = String(t.no ?? '').trim();\n  const description = String(t.description ?? '').trim() || 'Sin descripción';\n  if (!job_no || !no) continue;\n  if (!jobSet.has(job_no)) continue; // evita violar la FK\n\n  items.push({\n    json: { job_no, no, description, company_name: companyName },\n    pairedItem: { item: 0 },\n  });\n}\nreturn items;"
      },
      "id": "e2284673-17d9-4762-9fe3-87ff0cfdb618",
      "name": "Transformar ProyectosTareas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3168,
        1536
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "a06b9239-b42f-4306-a9ca-145c6fc152db",
      "name": "Split In Batches (upsert tasks)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2944,
        1536
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "f9d4f617-cf60-4154-b004-935ceae11d12",
      "name": "Pack batch (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1464
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "a06b9239-b42f-4306-a9ca-145c6fc152db",
      "name": "Split In Batches (upsert tasks)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2944,
        1536
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "f9d4f617-cf60-4154-b004-935ceae11d12",
      "name": "Pack batch (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1464
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/job_task?on_conflict=company_name,job_no,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "6c114323-50de-41d2-ae79-9bd1329da2a9",
      "name": "HTTP - Upsert job_task (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2496,
        1536
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "9cfa15ae-b127-4827-a31c-585b794c740e",
      "name": "Compute now ISO (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1272
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "= {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_task"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "c0be5d90-3f87-43b7-9eee-96fe68ec7dcf",
      "name": "Update sync_state (tasks)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        1272
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ \n  'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/Recursos?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['resource']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "c12db487-29db-42bc-a853-26dfa527f53a",
      "name": "HTTP - Recursos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4064,
        648
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst first = input[0];\nconst data = first.json;\nconst recursos = data.value || [];\nconst items = [];\n\nconst company = $('Resolve Company').first().json.companyName; // <- dinámico\n\nfor (const r of recursos) {\n  const code = r.no || '';\n  const name = r.name || '';\n  const email = String(r.email ?? r.arbvrneMail ?? '').trim(); // prioriza email\n  const department = String(r.globalDimension1Code ?? r.department ?? '').trim();\n  const calendarRaw = r.calendar_type ?? r.calendarType ?? r.Calendario ?? r.calendario ?? '';\n  const calendar_type = String(calendarRaw).trim();\n\n  if (!email || !email.includes('@')) continue;\n  if (!department) continue;\n\n  items.push({\n    json: {\n      code,\n      name,\n      email,\n      department_code: department,\n      company_name: company, // <- aquí\n      calendar_type,\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "f9e3e1cc-c933-44b2-90d9-28703bbe82f0",
      "name": "Transformar Recursos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3840,
        552
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "9fc500b0-b9e3-4f47-b639-65c49e50ce40",
      "name": "Split In Batches (upsert)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -3616,
        552
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => {\n  const j = i.json || {};\n  return {\n    ...j,\n    calendar_type: (j.calendar_type && String(j.calendar_type).trim())\n      || (j.calendarType && String(j.calendarType).trim())\n      || 'DEFAULT' // valor por defecto\n  };\n});\nreturn [{ json: { payload: rows } }];"
      },
      "id": "2e7662da-3127-41e5-b4e7-aab374faf280",
      "name": "Pack batch",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3392,
        192
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/resource?on_conflict=company_name,code",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "1ccec861-dd4f-466f-a971-09816eff3bb4",
      "name": "HTTP - Upsert resource (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3168,
        552
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "fc55774e-d48a-4cfd-996c-c05307cfcc19",
      "name": "Compute now ISO (resource)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1080
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "= {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "cd58abc3-36ce-4623-9387-f86ff93c576a",
      "name": "Update sync_state (resource)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        1080
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ \n  'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/Proyectos?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['job']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "d80bcc9a-d994-4ac3-bf2b-3cbe5a6ced9d",
      "name": "HTTP - Proyectos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5184,
        816
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst companyName = $('Resolve Company').first().json.companyName; // <- dinámico\nconst data = input[0].json;\nconst proyectos = data.value || [];\nconst items = [];\n\nconst allowed = new Set(['Planning','Quote','Open','Completed','Lost']);\n\nfor (const p of proyectos) {\n  const statusRaw = p.estado ?? p.Estado ?? p.status ?? '';\n  const status = String(statusRaw).trim();\n  \n  // Normalizar status: si no está en la lista permitida, usar 'Open'\n  const normalizedStatus = allowed.has(status) ? status : 'Open';\n\n  // Filtrar proyectos que comienzan por PP o PY\n  const projectNo = String(p.no || '').trim();\n  if (projectNo.startsWith('PP') || projectNo.startsWith('PY')) {\n    continue;\n  }\n\n  items.push({\n    json: {\n      no: projectNo,\n      description: p.description || '',\n      status: normalizedStatus, // <- usar el status normalizado\n      responsible: p.Responsible || p.responsible || '',\n      departamento: p.departamento || p.GlobalDimension1Code || '',\n      company_name: companyName, // <- aquí\n    },\n    pairedItem: { item: 0 },\n  });\n}\n\nreturn items;"
      },
      "id": "289795f8-d7bd-4658-b98b-95e3f6123538",
      "name": "Transformar Proyectos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4960,
        912
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "227aa0c8-6536-4aec-bf8b-35e588154aa9",
      "name": "Split In Batches (upsert jobs)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -4736,
        912
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "4e0dc608-2cf9-4710-9b7f-ae543495a425",
      "name": "Pack batch (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4512,
        192
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/job?on_conflict=company_name,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "f254476e-9ab2-4747-be31-601704b34c08",
      "name": "HTTP - Upsert job (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4288,
        912
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "723cebfa-dee7-4496-9a2c-8d2ee610c9b1",
      "name": "Compute now ISO (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        0
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "== {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "28b58af8-94c8-4f67-805e-2ff331d81ee8",
      "name": "Update sync_state (jobs)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        0
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ \n  'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/ProyectosEquipos?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['job_team']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "9057faa2-5463-4f51-b55e-4e01826382bb",
      "name": "HTTP - ProyectosEquipos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2944,
        336
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst data = input[0].json;\nconst equipos = data.value || [];\nconst items = [];\n\nconst companyName = $('Resolve Company').first().json.companyName; // compañía dinámica\n\nfor (const e of equipos) {\n  const job_no = String(e.job_no ?? e.jobNo ?? e.NoProyecto ?? '').trim();\n  const resource_no = String(e.resource_no ?? e.resourceNo ?? e.NoRecurso ?? '').trim();\n  if (!job_no || !resource_no) continue;\n\n  items.push({\n    json: {\n      company_name: companyName,\n      job_no,\n      resource_no,\n    },\n    pairedItem: { item: 0 },\n  });\n}\n\nreturn items;"
      },
      "id": "704c14bf-44fc-4b08-bde2-2ea73b64d763",
      "name": "Transformar ProyectosEquipos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        432
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "aa664906-4841-46d8-bf1e-d7b5e76cbfde",
      "name": "Split In Batches (upsert team)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2496,
        432
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/job_team?on_conflict=company_name,job_no,resource_no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "235dfcf5-1b7f-4697-bb07-2ea169e9e1e9",
      "name": "HTTP - Upsert job_team (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2048,
        432
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "c3297565-5607-49cb-8770-58ff6ad94beb",
      "name": "Compute now ISO (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        192
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "= {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_team"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "e0c39d4f-0087-4e55-a69b-de313ed67b36",
      "name": "Update sync_state (team)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        192
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ \n  'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/RecursosCostos?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['resource_cost']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "31acb2b9-81f1-4778-a0a3-c8388c2a77b7",
      "name": "HTTP - RecursosCostos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2944,
        768
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst data = input[0].json;\nconst rows = data.value || [];\nconst items = [];\n\nconst companyName = $('Resolve Company').first().json.companyName; // dinámico\n\nfor (const r of rows) {\n  const resource_no = String(r.resource_no ?? r.resourceNo ?? r.noRecurso ?? '').trim();\n  const work_type = String(r.work_type ?? r.workType ?? r.tipoTrabajo ?? '').trim();\n  const unit_cost = Number(r.unit_cost ?? r.unitCost ?? r.costoUnitario ?? 0);\n\n  if (!resource_no || !work_type) continue;\n\n  items.push({\n    json: {\n      company_name: companyName,\n      resource_no,\n      work_type,\n      unit_cost,\n    },\n    pairedItem: { item: 0 },\n  });\n}\n\nreturn items;"
      },
      "id": "8a27212b-cfb5-4fcb-8cdf-e11bb71ce800",
      "name": "Transformar RecursosCostos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        864
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "23b012b1-f464-4d88-98cc-207ff1ff92c1",
      "name": "Split In Batches (upsert resource_cost)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2496,
        864
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "830c5de8-15f2-4b8b-a0ff-567704499de2",
      "name": "Pack batch (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2272,
        792
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/resource_cost?on_conflict=company_name,resource_no,work_type",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "524fd6dc-264d-4071-9d24-c5aa59e2838e",
      "name": "HTTP - Upsert resource_cost (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2048,
        864
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "82b8dc41-5d31-4c3e-ab1a-a7a54aa4fef1",
      "name": "Compute now ISO (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        648
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "= {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource_cost"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "c2bda7db-68f7-42b4-beab-73d759fe661a",
      "name": "Update sync_state (resource_cost)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        648
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies('\n  + $('Resolve Company').first().json.companyId\n  + ')/CalendaroPeriodosDias?$filter=lastModifiedDateTime%20ge%20'\n  + $('Build sync_state map').first().json.syncStateByEntity['calendar_period_days']\n}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "476a94b7-0788-434a-a2e1-848f87cd70dc",
      "name": "HTTP - CalendarPeriodDays (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2944,
        1896
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst companyName = $('Resolve Company').first().json.companyName; // <- añade esto\n\nconst data = input[0].json;\nconst rows = Array.isArray(data.value) ? data.value : [];\nconst items = [];\n\nfor (const r of rows) {\n  const allocation_period = String(r.allocation_period ?? r.allocationPeriod ?? '').trim();\n  const calendar_code = String(r.calendar_code ?? r.calendarCode ?? '').trim();\n  const dayRaw = r.day ?? r.Day ?? r.date ?? '';\n  const dayStr = String(dayRaw).trim();\n\n  if (!allocation_period) continue;\n  if (!dayStr) continue;\n\n  const holiday = Boolean(r.holiday ?? r.Holiday ?? false);\n  const hours_working = Number(r.hours_working ?? r.hoursWorking ?? 0);\n\n  const dayNum = Number(dayStr);\n  const day = Number.isNaN(dayNum) ? dayStr : dayNum;\n\n  items.push({\n    json: {\n      company_name: companyName,\n      allocation_period,\n      calendar_code,\n      day,\n      holiday,\n      hours_working,\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "9a99de97-a00e-4bd0-887c-d680d77e497e",
      "name": "Transformar CalendarPeriodDays",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1992
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "4101651d-9ca9-4e53-9f9e-8875b14cdc62",
      "name": "Split In Batches (upsert calendar)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2496,
        1992
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "295e60dc-eb55-4e87-aa35-b69104aec057",
      "name": "Pack batch (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2272,
        1920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.88.68:8000/rest/v1/calendar_period_days?on_conflict=company_name,allocation_period,calendar_code,day",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "b6d52d78-0f6f-4320-af41-5c3ecb1fa36f",
      "name": "HTTP - Upsert calendar_period_days (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2048,
        1992
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "de696069-4ef9-40d7-aa45-488fc57f797f",
      "name": "Compute now ISO (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2720,
        1776
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "= {{ $('Resolve Company').first().json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "calendar_period_days"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "8674c2c2-cebb-4e44-aba8-35845ce25b65",
      "name": "Update sync_state (calendar)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2496,
        1776
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ejecutar-sync-bc-to-supabase",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -6304,
        1128
      ],
      "id": "530ec4b5-2b6b-4270-919f-5284f71d1a4e",
      "name": "Webhook Trigger",
      "webhookId": "8a27722f-ef0b-42c3-abb3-32ab91bda2a3"
    },
    {
      "parameters": {
        "jsCode": "const p = $json.params || {};\nconst slugRaw = (p.company || $json.query?.company || '').toString().trim().toLowerCase();\nconst slug = encodeURI(slugRaw);\nconst map = {\n  'psi': { companyName: 'Power Solution Iberia SL', companyId: 'ca9dc1bf-54ee-ed11-884a-000d3a455d5b' },\n  'pslab': { companyName: 'PS LAB CONSULTING SL', companyId: '656f8f0e-2bf4-ed11-8848-000d3a4baf18' }\n};\nconst chosen = map[slug];\nif (!chosen) {\n  return [{ json: { error: 'Invalid company', slug } }];\n}\nreturn [{ json: { companyName: chosen.companyName, companyId: chosen.companyId, slug } }];"
      },
      "id": "e68bc62f-5a90-4623-99e1-5e3fabd80c8b",
      "name": "Resolve Company",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5856,
        1032
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: \"Sincronización BC a Supabase completada exitosamente\", timestamp: new Date().toISOString() } }}",
        "options": {}
      },
      "id": "812ed6ed-8277-448a-9d2f-49238f93f892",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -2272,
        144
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "fff090c4-3e61-4a18-884b-911b6e1f9844",
      "name": "Pack batch (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2272,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]);\n\n// Entidades que nos interesan\nconst entities = ['job','job_task','calendar_period_days','job_team','resource','resource_cost'];\n\nconst byEntity = {};\nfor (const r of rows) {\n  const e = String(r.entity || '').trim();\n  const raw = String(r.last_sync_at || '').trim();\n  if (!e || !raw) continue;\n  const iso = new Date(raw.replace(' ', 'T')).toISOString();\n  byEntity[e] = iso;\n}\n\n// NO lanzar error: devolver faltantes para que el flujo las salte\nconst missing = entities.filter(e => !(e in byEntity));\n\nreturn [{\n  json: {\n    syncStateByEntity: byEntity,\n    missing,\n    company: $('Resolve Company').first().json.companyName,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5408,
        1032
      ],
      "id": "22843e90-3109-4b05-a4ec-6f6285eafeaa",
      "name": "Build sync_state map"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -6304,
        936
      ],
      "id": "667b95fd-4e1e-4c24-a092-fb72690c6db4",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "18ae6cd4-9853-4694-ac15-bcf52e8e4597",
              "name": "query.company",
              "value": "pslab",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6080,
        1032
      ],
      "id": "93f41d73-8eb6-4f9d-8355-3926f5479013",
      "name": "Set Company"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "={{ $('Resolve Company').item.json.companyName }}"
            }
          ]
        }
      },
      "id": "40475ad7-c61f-4663-b440-9f44de6f1527",
      "name": "Get sync_state ALL",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5632,
        1032
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]);\n\n// En la tabla job la clave es \"no\" (y como fallback \"job_no\")\nconst jobNos = rows\n  .map(r => String(r.no ?? r.job_no ?? '').trim())\n  .filter(Boolean);\n\nreturn [{ json: { jobNos } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3616,
        1440
      ],
      "id": "5cf16407-d234-4c0e-bef6-9323ec8a2476",
      "name": "Build job set"
    }
  ],
  "connections": {
    "HTTP - ProyectosTareas (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosTareas",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosTareas": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert tasks)": {
      "main": [
        [
          {
            "node": "Pack batch (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (tasks)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_task (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_task (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert tasks)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (tasks)": {
      "main": [
        [
          {
            "node": "Update sync_state (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (tasks)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Recursos (filtrado)": {
      "main": [
        [
          {
            "node": "Compute now ISO (resource)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Transformar Recursos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Recursos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert)": {
      "main": [
        [
          {
            "node": "Pack batch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert)",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP - ProyectosEquipos (filtrado)",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP - RecursosCostos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Proyectos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar Proyectos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Proyectos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert jobs)": {
      "main": [
        [
          {
            "node": "Pack batch (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (jobs)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert jobs)",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP - Recursos (filtrado)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Build job set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (jobs)": {
      "main": [
        [
          {
            "node": "Update sync_state (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (jobs)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - ProyectosEquipos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosEquipos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosEquipos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert team)": {
      "main": [
        [
          {
            "node": "Pack batch (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_team (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (team)": {
      "main": [
        [
          {
            "node": "Update sync_state (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (team)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - RecursosCostos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar RecursosCostos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar RecursosCostos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert resource_cost)": {
      "main": [
        [
          {
            "node": "Pack batch (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (resource_cost)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource_cost (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource_cost (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource_cost)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource_cost)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - CalendarPeriodDays (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar CalendarPeriodDays",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar CalendarPeriodDays": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert calendar)": {
      "main": [
        [
          {
            "node": "Pack batch (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (calendar)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert calendar_period_days (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert calendar_period_days (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (calendar)": {
      "main": [
        [
          {
            "node": "Update sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (calendar)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Set Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resolve Company": {
      "main": [
        [
          {
            "node": "Get sync_state ALL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (team)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_team (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build sync_state map": {
      "main": [
        [
          {
            "node": "HTTP - Proyectos (filtrado)",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP - CalendarPeriodDays (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Set Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Company": {
      "main": [
        [
          {
            "node": "Resolve Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sync_state ALL": {
      "main": [
        [
          {
            "node": "Build sync_state map",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build job set": {
      "main": [
        [
          {
            "node": "HTTP - ProyectosTareas (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "285382fa-d0f6-4ca9-a6cf-dffc9c1a4407",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-03T06:32:12.601Z",
      "updatedAt": "2025-09-03T06:32:12.601Z",
      "role": "workflow:owner",
      "workflowId": "XSYOmZ8mRuaXl6sg",
      "projectId": "ijP8FvHt2ZVVaBt9",
      "project": {
        "createdAt": "2025-08-25T17:25:17.353Z",
        "updatedAt": "2025-08-25T17:27:29.880Z",
        "id": "ijP8FvHt2ZVVaBt9",
        "name": "Daniel Bertona Sanchez <dbertona@powersolution.es>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-25T17:25:17.353Z",
            "updatedAt": "2025-08-25T17:25:17.353Z",
            "role": "project:personalOwner",
            "userId": "b802b4cc-8f5c-4608-9aec-e44abff8bf5d",
            "projectId": "ijP8FvHt2ZVVaBt9",
            "user": {
              "createdAt": "2025-08-25T17:25:16.887Z",
              "updatedAt": "2025-09-24T15:53:57.000Z",
              "id": "b802b4cc-8f5c-4608-9aec-e44abff8bf5d",
              "email": "dbertona@powersolution.es",
              "firstName": "Daniel",
              "lastName": "Bertona Sanchez",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "71xpeeX1apKTpNe0",
                "userActivatedAt": 1756717935545
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-23",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}
