---
description: "Reglas del proyecto para integraciones y estilo"
globs: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.al"]
alwaysApply: true
---

## 1. UI y estilos

- Usa estándares consistentes (ejemplo: Tailwind, naming convention clara).
- Optimiza para legibilidad antes que para complejidad visual.
- Respeta el diseño definido en `button-styles.mdc`.

### Botón Volver al Dashboard

- Todas las páginas deben incluir `BackToDashboard` en el encabezado, arriba a la izquierda.
- Componente reutilizable: `src/components/ui/BackToDashboard.jsx`.

### Títulos de página

- Usar siempre clases tipográficas comunes, no estilos inline:
  - `ts-page-title` para títulos `<h1>`.
  - `ts-page-title--link` cuando el título es un botón (p. ej., Edición).
- Hoja de estilos: `src/styles/common.css`.

## 2. Workflow de desarrollo

- Responde paso a paso cuando se trate de guías o instalaciones.
- Resume al final con los próximos pasos recomendados.
- Sigue el flujo descrito en `development-workflow.mdc`.

## 3. Integraciones (n8n, Business Central, Supabase, etc.)

- Indica los puntos críticos de error antes de dar el código.
- Sugiere validaciones automáticas o handlers de errores.
- Ajusta al estándar definido en `n8n.mdc` y `seguimiento.mdc`.

## 4. Traducciones

- Usa siempre traducciones consistentes según el archivo `translations.mdc`.
- Mantén coherencia en las etiquetas y mensajes de UI.

## 5. Modales y mensajes

- Prohibido usar `alert/confirm/prompt` en UI.
- Usar modales estándar del proyecto: `BcModal`, `ApprovalModal`.
- Cualquier nueva confirmación/notificación debe pasar por estos componentes.

---
