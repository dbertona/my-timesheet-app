{
  "createdAt": "2025-09-03T06:32:12.599Z",
  "updatedAt": "2025-09-08T09:11:30.000Z",
  "id": "XSYOmZ8mRuaXl6sg",
  "name": "001_sincronizacion_completa_smart",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "ce1c35bb-b501-4af2-a313-2ce3f5249071",
      "name": "Compute last_sync ISO (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1536,
        -32
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/ProyectosTareas?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "99b15d1b-79ca-4d69-b88f-04cecaab58f6",
      "name": "HTTP - ProyectosTareas (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1312,
        -32
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const tareas = data.value || []; const items = []; for (const t of tareas) { const job_no = t.projectNo || t.jobNo || t.job_no || ''; const no = t.no || ''; const description = (t.description && String(t.description).trim()) ? String(t.description).trim() : 'Sin descripción'; if (!job_no || !no) continue; items.push({ json: { job_no, no, description, company_name: 'Power Solution Iberia SL' }, pairedItem: { item: 0 } }); } return items;"
      },
      "id": "7d88282f-82af-4d00-9cef-ec5b2885cd81",
      "name": "Transformar ProyectosTareas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        64
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "c746467e-cd35-422c-93d0-f98167dc84c1",
      "name": "Split In Batches (upsert tasks)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -864,
        64
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "972f5907-8bbf-4601-a503-4dd0d8627fe5",
      "name": "Pack batch (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        64
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job_task?on_conflict=company_name,job_no,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "5693e30a-246a-4623-bdfa-132a3db62ae7",
      "name": "HTTP - Upsert job_task (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -416,
        64
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "025a2823-0a9a-485c-b9b6-2c1789063992",
      "name": "Compute now ISO (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -128
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_task"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "b7dd4eda-328a-45b0-a164-2d8611f9f1d9",
      "name": "Update sync_state (tasks)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        -128
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "fd57d87b-a5f1-44ee-96d2-b231f52be752",
      "name": "Compute last_sync ISO (resource)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5568,
        -128
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(' + $('Resolve Company').item.json.companyId + ')/Recursos?$filter=lastModifiedDateTime ge ' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "6e9e4707-2cf3-4693-b9e0-bfc4db98b0bf",
      "name": "HTTP - Recursos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5344,
        -128
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst first = input[0];\nconst data = first.json;\nconst recursos = data.value || [];\nconst items = [];\n\nfor (const r of recursos) {\n  const code = r.no || '';\n  const name = r.name || '';\n  const email = String(r.arbvrneMail ?? r.email ?? '').trim();\n  const department = String(r.globalDimension1Code ?? r.department ?? '').trim();\n  // Intenta varias claves según BC/AL\n  const calendarRaw = r.calendar_type ?? r.calendarType ?? r.Calendario ?? r.calendario ?? '';\n  const calendar_type = String(calendarRaw).trim();\n  const company = 'Power Solution Iberia SL';\n\n  // DESCARTAR si no hay email válido o no hay departamento\n  if (!email || !email.includes('@')) continue;\n  if (!department) continue;\n\n  items.push({\n    json: {\n      code,\n      name,\n      email,\n      department_code: department,\n      company_name: company,\n      calendar_type, // si viene vacío, el Pack batch ya pone 'DEFAULT'\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "764bb45f-3256-4115-bf78-b28b2a876267",
      "name": "Transformar Recursos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5120,
        -224
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "e004bb59-9df6-44a5-aa51-7db78a1e69c7",
      "name": "Split In Batches (upsert)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -4896,
        -224
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => {\n  const j = i.json || {};\n  return {\n    ...j,\n    calendar_type: (j.calendar_type && String(j.calendar_type).trim())\n      || (j.calendarType && String(j.calendarType).trim())\n      || 'DEFAULT' // valor por defecto\n  };\n});\nreturn [{ json: { payload: rows } }];"
      },
      "id": "a016794c-953b-4306-b816-a56e8a3f2a3f",
      "name": "Pack batch",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4672,
        -544
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/resource?on_conflict=company_name,code",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "da65d490-2169-4f11-b218-294d1bfdf5f9",
      "name": "HTTP - Upsert resource (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4448,
        -224
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "3490c4fe-ed09-4b55-9064-8140ecaf02a2",
      "name": "Compute now ISO (resource)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        256
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "54f794e0-71ab-4654-8f83-97e86d9b48d5",
      "name": "Update sync_state (resource)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        256
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "={{ $('Resolve Company').item.json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job"
            }
          ]
        }
      },
      "id": "e0f5e357-b45a-4f45-b2a4-4e752dd04274",
      "name": "Get sync_state (jobs)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7136,
        -224
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "ccb0f6df-10ac-4355-a2fc-780ffa6d61a2",
      "name": "Compute last_sync ISO (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6912,
        -224
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(' + $('Resolve Company').item.json.companyId + ')/Proyectos?$filter=lastModifiedDateTime ge ' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "2b720063-4f3a-4874-938c-eaa4c569f6f2",
      "name": "HTTP - Proyectos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -6688,
        -224
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const proyectos = data.value || []; const items = []; const allowed = new Set(['Open','Planning','Completed','Lost']); for (const p of proyectos) { const statusRaw = p.estado ?? p.Estado ?? p.status ?? ''; const status = String(statusRaw).trim(); if (!allowed.has(status)) continue; items.push({ json: { no: p.no || '', description: p.description || '', status, responsible: p.Responsible || p.responsible || '', departamento: p.departamento || p.GlobalDimension1Code || '', company_name: 'Power Solution Iberia SL' }, pairedItem: { item: 0 } }); } return items;"
      },
      "id": "f8bcf1db-353d-4f38-b12b-02b40d96444b",
      "name": "Transformar Proyectos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6464,
        -128
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "ce63dbb3-5e35-4a2f-aa8a-6b808a14ddcd",
      "name": "Split In Batches (upsert jobs)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -6240,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "d2616500-e4d1-4fa2-bfc5-e9a1113233e5",
      "name": "Pack batch (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6016,
        -544
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job?on_conflict=company_name,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "50889b1f-e30d-4f6d-af9d-cc0ae890d28e",
      "name": "HTTP - Upsert job (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5792,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "b607da9f-5589-4fbb-9ec2-138bf486bf87",
      "name": "Compute now ISO (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -704
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "d7505e01-d22a-4eae-8424-8641d0c1a91e",
      "name": "Update sync_state (jobs)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        -704
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "868ca895-efa6-44e8-b80a-9f9b019b8c15",
      "name": "Compute last_sync ISO (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4224,
        -224
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(' + $('Resolve Company').item.json.companyId + ')/ProyectosEquipos?$filter=lastModifiedDateTime ge ' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "300cda12-8dd5-4c99-867d-5b2c5fa75ec2",
      "name": "HTTP - ProyectosEquipos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4000,
        -224
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const equipos = data.value || []; const items = []; for (const e of equipos) { const job_no = String(e.job_no ?? '').trim(); const resource_no = String(e.resource_no ?? '').trim(); if (!job_no || !resource_no) continue; items.push({ json: { company_name: 'Power Solution Iberia SL', job_no, resource_no } }); } return items;"
      },
      "id": "efb63754-fc8f-4a72-99b0-b6212a871cd0",
      "name": "Transformar ProyectosEquipos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3776,
        -128
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "b3cd898d-a4fc-4121-bcb8-da27826d0e49",
      "name": "Split In Batches (upsert team)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -3552,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "6257b2c0-6f18-4884-b2a9-f9a32945dd30",
      "name": "Pack batch (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3328,
        -128
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job_team?on_conflict=company_name,job_no,resource_no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "665219d5-1f5c-4088-8284-8e9c759fe63a",
      "name": "HTTP - Upsert job_team (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3104,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "d4dfdda7-cad9-4e0e-ab84-c45bcadb1dfa",
      "name": "Compute now ISO (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -512
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_team"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "a056a939-fd3c-43cb-a0b6-808be8f5c027",
      "name": "Update sync_state (team)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        -512
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "a418a165-d69d-48ee-be8a-c171410a1839",
      "name": "Compute last_sync ISO (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2880,
        -128
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(' + $('Resolve Company').item.json.companyId + ')/RecursosCostos?$filter=lastModifiedDateTime ge ' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "08b2388e-8d00-4589-8947-935283bb2c0a",
      "name": "HTTP - RecursosCostos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2656,
        -128
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const rows = data.value || []; const items = []; for (const r of rows) { const resource_no = String(r.resource_no ?? '').trim(); const work_type = String(r.work_type ?? '').trim(); const unit_cost = Number(r.unit_cost ?? 0); if (!resource_no || !work_type) continue; items.push({ json: { company_name: 'Power Solution Iberia SL', resource_no, work_type, unit_cost } }); } return items;"
      },
      "id": "b4bdca63-64f5-4b81-b8ae-5cb269b9957b",
      "name": "Transformar RecursosCostos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2432,
        -32
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "1877324f-91bd-4c3c-8c12-fb1f7fb11eb9",
      "name": "Split In Batches (upsert resource_cost)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -2208,
        -32
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "59214727-7776-495f-abe9-df6f9632a164",
      "name": "Pack batch (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1984,
        -32
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/resource_cost?on_conflict=company_name,resource_no,work_type",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "813abe2e-4d04-487f-966f-ce639b096561",
      "name": "HTTP - Upsert resource_cost (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1760,
        -32
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "93d78f6f-acd6-4d6a-a8f1-575426e8e546",
      "name": "Compute now ISO (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -320
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource_cost"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "13e8370a-8e8d-48ea-a40e-215a5577c2cb",
      "name": "Update sync_state (resource_cost)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        -320
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "={{ $('Resolve Company').item.json.companyName }}"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "calendar_period_days"
            }
          ]
        }
      },
      "id": "6d414786-e2b9-4bc5-9ba8-369790978b63",
      "name": "Get sync_state (calendar)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1760,
        -1024
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "d226909e-cea5-46b7-937c-4f23f29915f3",
      "name": "Compute last_sync ISO (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1536,
        -1024
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(' + $('Resolve Company').item.json.companyId + ')/CalendaroPeriodosDias?$filter=lastModifiedDateTime ge ' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "dc4a5b3b-1039-4412-ad5b-d850167b00bb",
      "name": "HTTP - CalendarPeriodDays (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1312,
        -1024
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst data = input[0].json;\nconst rows = Array.isArray(data.value) ? data.value : [];\nconst items = [];\n\nfor (const r of rows) {\n  const allocation_period = String(r.allocation_period ?? r.allocationPeriod ?? '').trim();\n  const calendar_code = String(r.calendar_code ?? r.calendarCode ?? '').trim();\n  const dayRaw = r.day ?? r.Day ?? r.date ?? '';\n  const dayStr = String(dayRaw).trim();\n\n  if (!allocation_period) continue;\n  if (!dayStr) continue; // acepta '2025-01-01' o '1'\n\n  const holiday = Boolean(r.holiday ?? r.Holiday ?? false);\n  const hours_working = Number(r.hours_working ?? r.hoursWorking ?? 0);\n\n  // Si es número válido, envía número; si es 'YYYY-MM-DD', envía string (fecha)\n  const dayNum = Number(dayStr);\n  const day = Number.isNaN(dayNum) ? dayStr : dayNum;\n\n  items.push({\n    json: {\n      company_name: 'Power Solution Iberia SL',\n      allocation_period,\n      calendar_code,\n      day,\n      holiday,\n      hours_working,\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "e1fa85b2-77f8-4b38-8966-0c58f6c56d99",
      "name": "Transformar CalendarPeriodDays",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -928
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "200339a0-edf1-4746-8117-8c119a573381",
      "name": "Split In Batches (upsert calendar)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -864,
        -928
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "7d8a4583-79f1-40fa-b933-9df70d8af5ed",
      "name": "Pack batch (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        -992
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/calendar_period_days?on_conflict=company_name,allocation_period,calendar_code,day",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "286dfb82-8286-45ec-b3e8-391958b22278",
      "name": "HTTP - Upsert calendar_period_days (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -416,
        -928
      ]
    },
    {
      "parameters": {
        "jsCode": "return [{ json: { nowIso: new Date().toISOString() } }];"
      },
      "id": "4f08837a-2e06-48ca-9c01-5f5c14efa60d",
      "name": "Compute now ISO (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -1136
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "calendar_period_days"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "3ab33094-3bc9-4fd1-95f6-cda0977c3225",
      "name": "Update sync_state (calendar)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -864,
        -1136
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ejecutar-sync-bc-to-supabase",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -7360,
        -448
      ],
      "id": "eb1a878d-8199-4e9a-abbd-baf0f10ef5bd",
      "name": "Webhook Trigger",
      "webhookId": "8a27722f-ef0b-42c3-abb3-32ab91bda2a3"
    },
    {
      "parameters": {
        "jsCode": "const p = $json.params || {};\nconst slugRaw = (p.company || $json.query?.company || '').toString().trim().toLowerCase();\nconst slug = encodeURI(slugRaw);\nconst map = {\n  'psi': { companyName: 'Power Solution Iberia SL', companyId: 'ca9dc1bf-54ee-ed11-884a-000d3a455d5b' },\n  'pslab': { companyName: 'PS LAB CONSULTING SL', companyId: '656f8f0e-2bf4-ed11-8848-000d3a4baf18' }\n};\nconst chosen = map[slug];\nif (!chosen) {\n  return [{ json: { error: 'Invalid company', slug } }];\n}\nreturn [{ json: { companyName: chosen.companyName, companyId: chosen.companyId, slug } }];"
      },
      "id": "c9eec776-290c-4cdd-8c83-9ae7c4ea0325",
      "name": "Resolve Company",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7136,
        -448
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: \"Sincronización BC a Supabase completada exitosamente\", timestamp: new Date().toISOString() } }}",
        "options": {}
      },
      "id": "812d5251-4b16-4666-b210-a29b629750c2",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        256,
        -352
      ]
    }
  ],
  "connections": {
    "Compute last_sync ISO (resource)": {
      "main": [
        [
          {
            "node": "HTTP - Recursos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Recursos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar Recursos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Recursos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert)": {
      "main": [
        [
          {
            "node": "Pack batch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sync_state (jobs)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (jobs)": {
      "main": [
        [
          {
            "node": "HTTP - Proyectos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Proyectos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar Proyectos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Proyectos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert jobs)": {
      "main": [
        [
          {
            "node": "Pack batch (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (jobs)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (jobs)": {
      "main": [
        [
          {
            "node": "Update sync_state (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (tasks)": {
      "main": [
        [
          {
            "node": "HTTP - ProyectosTareas (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - ProyectosTareas (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosTareas",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosTareas": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert tasks)": {
      "main": [
        [
          {
            "node": "Pack batch (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (tasks)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_task (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (tasks)": {
      "main": [
        [
          {
            "node": "Update sync_state (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (team)": {
      "main": [
        [
          {
            "node": "HTTP - ProyectosEquipos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - ProyectosEquipos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosEquipos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosEquipos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert team)": {
      "main": [
        [
          {
            "node": "Pack batch (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (team)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_team (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (team)": {
      "main": [
        [
          {
            "node": "Update sync_state (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (resource_cost)": {
      "main": [
        [
          {
            "node": "HTTP - RecursosCostos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - RecursosCostos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar RecursosCostos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar RecursosCostos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert resource_cost)": {
      "main": [
        [
          {
            "node": "Pack batch (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (resource_cost)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource_cost (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource_cost)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sync_state (calendar)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (calendar)": {
      "main": [
        [
          {
            "node": "HTTP - CalendarPeriodDays (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - CalendarPeriodDays (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar CalendarPeriodDays",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar CalendarPeriodDays": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert calendar)": {
      "main": [
        [
          {
            "node": "Pack batch (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (calendar)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert calendar_period_days (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (calendar)": {
      "main": [
        [
          {
            "node": "Update sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job (Supabase REST)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (resource)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split In Batches (upsert jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource (Supabase REST)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (team)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split In Batches (upsert)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_team (Supabase REST)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (resource_cost)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split In Batches (upsert team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource_cost (Supabase REST)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (tasks)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split In Batches (upsert resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Resolve Company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resolve Company": {
      "main": [
        [
          {
            "node": "Get sync_state (jobs)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (jobs)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (calendar)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (team)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource_cost)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (tasks)": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert calendar_period_days (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_task (Supabase REST)": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "47474904-c345-4432-8042-86e329a4925c",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-03T06:32:12.601Z",
      "updatedAt": "2025-09-03T06:32:12.601Z",
      "role": "workflow:owner",
      "workflowId": "XSYOmZ8mRuaXl6sg",
      "projectId": "ijP8FvHt2ZVVaBt9",
      "project": {
        "createdAt": "2025-08-25T17:25:17.353Z",
        "updatedAt": "2025-08-25T17:27:29.880Z",
        "id": "ijP8FvHt2ZVVaBt9",
        "name": "Daniel Bertona Sanchez <dbertona@powersolution.es>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-25T17:25:17.353Z",
            "updatedAt": "2025-08-25T17:25:17.353Z",
            "role": "project:personalOwner",
            "userId": "b802b4cc-8f5c-4608-9aec-e44abff8bf5d",
            "projectId": "ijP8FvHt2ZVVaBt9",
            "user": {
              "createdAt": "2025-08-25T17:25:16.887Z",
              "updatedAt": "2025-09-08T08:11:54.000Z",
              "id": "b802b4cc-8f5c-4608-9aec-e44abff8bf5d",
              "email": "dbertona@powersolution.es",
              "firstName": "Daniel",
              "lastName": "Bertona Sanchez",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "71xpeeX1apKTpNe0",
                "userActivatedAt": 1756717935545
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-07",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}
