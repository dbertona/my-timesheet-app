{
  "name": "001_sincronizacion_completa_smart",
  "nodes": [
    {
      "parameters": {},
      "id": "cb81e362-8d2d-4538-84f0-31ec42067b3d",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -208,
        192
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "1499ba47-b6c2-490a-acf5-2b1e18650b02",
      "name": "Compute last_sync ISO (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5840,
        576
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/ProyectosTareas?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "f35849c2-52d0-4e7f-b755-3bb56977292d",
      "name": "HTTP - ProyectosTareas (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6064,
        576
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const tareas = data.value || []; const items = []; for (const t of tareas) { const job_no = t.projectNo || t.jobNo || t.job_no || ''; const no = t.no || ''; const description = (t.description && String(t.description).trim()) ? String(t.description).trim() : 'Sin descripción'; if (!job_no || !no) continue; items.push({ json: { job_no, no, description, company_name: 'Power Solution Iberia SL' }, pairedItem: { item: 0 } }); } return items;"
      },
      "id": "e33efce1-4513-44a1-9227-f21d2a3d4507",
      "name": "Transformar ProyectosTareas",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6288,
        672
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "558d1ae2-77bd-40c3-8230-4a91f104334d",
      "name": "Split In Batches (upsert tasks)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        6512,
        672
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "1a38729b-a85e-4d38-b195-160fbe794a61",
      "name": "Pack batch (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6736,
        672
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job_task?on_conflict=company_name,job_no,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "0fdeb327-6dc9-4cc9-84b2-76dbcfa9fe81",
      "name": "HTTP - Upsert job_task (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6960,
        672
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (jobs)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - Proyectos (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "37f416e4-f3a6-4159-90e0-92ab2bff0f08",
      "name": "Compute now ISO (tasks)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6288,
        480
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_task"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "de616ef1-f366-46c4-899b-0d19db337301",
      "name": "Update sync_state (tasks)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6512,
        480
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "1c5618c1-be1e-495b-91ac-e53e696badb3",
      "name": "Compute last_sync ISO (resource)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1632,
        496
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/Recursos?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "6b590881-165b-45ce-8c76-55b6f9ab4e69",
      "name": "HTTP - Recursos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1808,
        480
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst first = input[0];\nconst data = first.json;\nconst recursos = data.value || [];\nconst items = [];\n\nfor (const r of recursos) {\n  const code = r.no || '';\n  const name = r.name || '';\n  const email = String(r.arbvrneMail ?? r.email ?? '').trim();\n  const department = String(r.globalDimension1Code ?? r.department ?? '').trim();\n  // Intenta varias claves según BC/AL\n  const calendarRaw = r.calendar_type ?? r.calendarType ?? r.Calendario ?? r.calendario ?? '';\n  const calendar_type = String(calendarRaw).trim();\n  const company = 'Power Solution Iberia SL';\n\n  // DESCARTAR si no hay email válido o no hay departamento\n  if (!email || !email.includes('@')) continue;\n  if (!department) continue;\n\n  items.push({\n    json: {\n      code,\n      name,\n      email,\n      department_code: department,\n      company_name: company,\n      calendar_type, // si viene vacío, el Pack batch ya pone 'DEFAULT'\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "557c5cbd-3e88-4920-acd5-d6242db4cb09",
      "name": "Transformar Recursos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2032,
        384
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "fc59d33e-485b-48b1-aa8d-22afee013ee4",
      "name": "Split In Batches (upsert)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        2256,
        384
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => {\n  const j = i.json || {};\n  return {\n    ...j,\n    calendar_type: (j.calendar_type && String(j.calendar_type).trim())\n      || (j.calendarType && String(j.calendarType).trim())\n      || 'DEFAULT' // valor por defecto\n  };\n});\nreturn [{ json: { payload: rows } }];"
      },
      "id": "0a30ff07-ee6b-4903-8e91-0a85d85e9de4",
      "name": "Pack batch",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2480,
        384
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/resource?on_conflict=company_name,code",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "179239c7-b3e3-4be4-9cfc-7d0ee385af14",
      "name": "HTTP - Upsert resource (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2704,
        384
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (resource)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - Recursos (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "0a55851e-f910-4cee-a93e-31f857c43927",
      "name": "Compute now ISO (resource)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2032,
        576
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "f5df6f8d-f2e8-4486-ade0-f796983a5889",
      "name": "Update sync_state (resource)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2256,
        576
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job"
            }
          ]
        }
      },
      "id": "8ad4e855-acb0-4fe3-8e26-383fbcf58e6a",
      "name": "Get sync_state (jobs)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        16,
        384
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource"
            }
          ]
        }
      },
      "id": "2b2d1f3c-1d2e-4c3b-9e2a-111111111001",
      "name": "Get sync_state (resource)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1408,
        496
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_task"
            }
          ]
        }
      },
      "id": "2b2d1f3c-1d2e-4c3b-9e2a-111111111002",
      "name": "Get sync_state (tasks)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5616,
        576
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_team"
            }
          ]
        }
      },
      "id": "2b2d1f3c-1d2e-4c3b-9e2a-111111111003",
      "name": "Get sync_state (team)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3152,
        480
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource_cost"
            }
          ]
        }
      },
      "id": "2b2d1f3c-1d2e-4c3b-9e2a-111111111004",
      "name": "Get sync_state (resource_cost)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4496,
        576
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "e007eac0-d003-4502-a044-fe45c211625b",
      "name": "Compute last_sync ISO (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        384
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/Proyectos?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "2b4df65a-ba8b-4cda-aaf3-c6f6b325006b",
      "name": "HTTP - Proyectos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        464,
        384
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const proyectos = data.value || []; const items = []; const allowed = new Set(['Open','Planning','Completed','Lost']); for (const p of proyectos) { const statusRaw = p.estado ?? p.Estado ?? p.status ?? ''; const status = String(statusRaw).trim(); if (!allowed.has(status)) continue; items.push({ json: { no: p.no || '', description: p.description || '', status, responsible: p.Responsible || p.responsible || '', departamento: p.departamento || p.GlobalDimension1Code || '', company_name: 'Power Solution Iberia SL' }, pairedItem: { item: 0 } }); } return items;"
      },
      "id": "005e5138-16bb-4d33-91ba-4a02affcdbaf",
      "name": "Transformar Proyectos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        480
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "ccf9fd94-452b-438f-922c-ea2cafa253a6",
      "name": "Split In Batches (upsert jobs)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        912,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json); return [{ json: { payload: rows } }];"
      },
      "id": "10468c15-4382-4df6-bf7c-a13c3b774afa",
      "name": "Pack batch (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1136,
        480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job?on_conflict=company_name,no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "e17149f1-9143-4714-b4d5-4e3766090efb",
      "name": "HTTP - Upsert job (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1360,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (team)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - ProyectosEquipos (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "12d1ed34-2412-4721-8818-c4c9b01929d5",
      "name": "Compute now ISO (jobs)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        304
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "2eeab672-c849-4524-91cd-31a0e63aab8c",
      "name": "Update sync_state (jobs)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        912,
        288
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "98629e33-cc62-42bf-8583-f03380b608ed",
      "name": "Compute last_sync ISO (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3152,
        384
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/ProyectosEquipos?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "b77c825d-8e76-4253-a958-3039c5ed5b71",
      "name": "HTTP - ProyectosEquipos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3376,
        384
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const equipos = data.value || []; const items = []; for (const e of equipos) { const job_no = String(e.job_no ?? '').trim(); const resource_no = String(e.resource_no ?? '').trim(); if (!job_no || !resource_no) continue; items.push({ json: { company_name: 'Power Solution Iberia SL', job_no, resource_no } }); } return items;"
      },
      "id": "f046f3f8-de32-4e4b-ba58-5a60e98934fa",
      "name": "Transformar ProyectosEquipos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3600,
        480
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "7eb8092b-1f24-4527-af1e-f5997b27428f",
      "name": "Split In Batches (upsert team)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        3824,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "4941e127-9e96-4c85-9a21-006a627dc33a",
      "name": "Pack batch (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4048,
        480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/job_team?on_conflict=company_name,job_no,resource_no",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "d56e11b1-7a8b-4357-9b09-07a176630c6f",
      "name": "HTTP - Upsert job_team (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4272,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (resource_cost)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - RecursosCostos (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "82939602-1995-4b2c-9c15-b9a178b52421",
      "name": "Compute now ISO (team)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3600,
        288
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "job_team"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "6b15f19e-0609-49a2-adb5-c8a3aedd2951",
      "name": "Update sync_state (team)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3824,
        288
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "2a687646-8b74-4325-944d-c9e295d12817",
      "name": "Compute last_sync ISO (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4496,
        480
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/RecursosCostos?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "cb55e215-3f56-4747-bd88-74efed742f99",
      "name": "HTTP - RecursosCostos (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4720,
        480
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all(); if (input.length === 0) return []; const data = input[0].json; const rows = data.value || []; const items = []; for (const r of rows) { const resource_no = String(r.resource_no ?? '').trim(); const work_type = String(r.work_type ?? '').trim(); const unit_cost = Number(r.unit_cost ?? 0); if (!resource_no || !work_type) continue; items.push({ json: { company_name: 'Power Solution Iberia SL', resource_no, work_type, unit_cost } }); } return items;"
      },
      "id": "5e54450c-3079-4edc-9d6f-dd169d9cf8fb",
      "name": "Transformar RecursosCostos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4944,
        576
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "c09c4af1-d94d-4271-b9a0-39d6b3af8c88",
      "name": "Split In Batches (upsert resource_cost)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        5168,
        576
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "13fcc709-b905-4893-9c2e-a599f3b5681d",
      "name": "Pack batch (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5392,
        576
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/resource_cost?on_conflict=company_name,resource_no,work_type",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "fbfa0132-0c13-4dbe-a040-10c0804983b7",
      "name": "HTTP - Upsert resource_cost (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5616,
        576
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (tasks)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - ProyectosTareas (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "8be5ecc7-0181-47a5-b9ca-9c703bd62759",
      "name": "Compute now ISO (resource_cost)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4944,
        384
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "resource_cost"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "d48c2bda-1da5-4cee-aa2f-93fb008b5b71",
      "name": "Update sync_state (resource_cost)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5168,
        384
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "calendar_period_days"
            }
          ]
        }
      },
      "id": "a3161586-674c-454e-a9ec-b5b63a83282c",
      "name": "Get sync_state (calendar)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        16,
        0
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().flatMap(i => Array.isArray(i.json) ? i.json : [i.json]); if (rows.length === 0) { return [{ json: { lastSyncIso: '1970-01-01T00:00:00Z' } }]; } const row = rows[0]; const last = row.last_sync_at || '1970-01-01T00:00:00Z'; const iso = new Date(last).toISOString(); return [{ json: { lastSyncIso: iso } }];"
      },
      "id": "415a4860-6265-4e9e-9e51-e78bc61d6fcd",
      "name": "Compute last_sync ISO (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        0
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://api.businesscentral.dynamics.com/v2.0/a18dc497-a8b8-4740-b723-65362ab7a3fb/Pruebas_PS/api/Power_Solution/PS_API/v2.0/companies(ca9dc1bf-54ee-ed11-884a-000d3a455d5b)/CalendaroPeriodosDias?$filter=lastModifiedDateTime%20ge%20' + $json.lastSyncIso }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "timeout": 60000
        }
      },
      "id": "2ae3b8dd-7672-4cd2-88e1-50823c27f95b",
      "name": "HTTP - CalendarPeriodDays (filtrado)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        464,
        0
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "5caHilW1m87Snw87",
          "name": "Business Central"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\nif (input.length === 0) return [];\n\nconst data = input[0].json;\nconst rows = Array.isArray(data.value) ? data.value : [];\nconst items = [];\n\nfor (const r of rows) {\n  const allocation_period = String(r.allocation_period ?? r.allocationPeriod ?? '').trim();\n  const calendar_code = String(r.calendar_code ?? r.calendarCode ?? '').trim();\n  const dayRaw = r.day ?? r.Day ?? r.date ?? '';\n  const dayStr = String(dayRaw).trim();\n\n  if (!allocation_period) continue;\n  if (!dayStr) continue; // acepta '2025-01-01' o '1'\n\n  const holiday = Boolean(r.holiday ?? r.Holiday ?? false);\n  const hours_working = Number(r.hours_working ?? r.hoursWorking ?? 0);\n\n  // Si es número válido, envía número; si es 'YYYY-MM-DD', envía string (fecha)\n  const dayNum = Number(dayStr);\n  const day = Number.isNaN(dayNum) ? dayStr : dayNum;\n\n  items.push({\n    json: {\n      company_name: 'Power Solution Iberia SL',\n      allocation_period,\n      calendar_code,\n      day,\n      holiday,\n      hours_working,\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "064769da-30e8-427e-b85c-ef7b918e219c",
      "name": "Transformar CalendarPeriodDays",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        96
      ]
    },
    {
      "parameters": {
        "batchSize": 300,
        "options": {}
      },
      "id": "c1ba4063-0bf0-4d33-8586-19bbda11abef",
      "name": "Split In Batches (upsert calendar)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        912,
        96
      ]
    },
    {
      "parameters": {
        "jsCode": "const rows = $input.all().map(i => i.json || {}); return [{ json: { payload: rows } }];"
      },
      "id": "7e56bcab-54d4-46e1-b080-079536c64b93",
      "name": "Pack batch (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1136,
        96
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://qfpswxjunoepznrpsltt.supabase.co/rest/v1/calendar_period_days?on_conflict=company_name,allocation_period,calendar_code,day",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmcHN3eGp1bm9lcHpucnBzbHR0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Mzg3MTA3OSwiZXhwIjoyMDY5NDQ3MDc5fQ.PxpfuFsfvpeEPHCEiWhRn0SD1WxngTAEppJ-65QTTOQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.payload }}",
        "options": {
          "timeout": 60000
        }
      },
      "id": "62118790-6873-4697-a7a6-fa2a9d75fcf5",
      "name": "HTTP - Upsert calendar_period_days (Supabase REST)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1360,
        96
      ]
    },
    {
      "parameters": {
        "jsCode": "const prev = $('Compute last_sync ISO (calendar)').item.json.lastSyncIso || '1970-01-01T00:00:00Z'; const resp = $('HTTP - CalendarPeriodDays (filtrado)').item.json || {}; const arr = Array.isArray(resp.value) ? resp.value : []; let latest = new Date(prev).toISOString(); const pickTs = (row) => row.lastModifiedDateTime || row.last_modified || row.LastModifiedDateTime || row.lastmodified || null; for (const r of arr) { const ts = pickTs(r); if (!ts) continue; const iso = new Date(ts).toISOString(); if (iso > latest) latest = iso; } return [{ json: { nowIso: latest } }];"
      },
      "id": "3ff6c230-ce81-4298-8d03-cb98a0ac0263",
      "name": "Compute now ISO (calendar)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        -96
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "sync_state",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "company_name",
              "condition": "eq",
              "keyValue": "Power Solution Iberia SL"
            },
            {
              "keyName": "entity",
              "condition": "eq",
              "keyValue": "calendar_period_days"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_sync_at",
              "fieldValue": "={{ $json.nowIso }}"
            }
          ]
        }
      },
      "id": "736793ed-fde0-4202-ba36-f6f85a567bda",
      "name": "Update sync_state (calendar)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        912,
        -96
      ],
      "credentials": {
        "supabaseApi": {
          "id": "Qa0kL8CVFxjwQVZ5",
          "name": "Supabase account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Get sync_state (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sync_state (jobs)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (jobs)": {
      "main": [
        [
          {
            "node": "HTTP - Proyectos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Proyectos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar Proyectos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Proyectos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert jobs)": {
      "main": [
        [
          {
            "node": "Pack batch (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (jobs)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job (Supabase REST)": {
      "main": [
        [
          {
            "node": "Get sync_state (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (jobs)": {
      "main": [
        [
          {
            "node": "Update sync_state (jobs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (jobs)": {
      "main": [
        [
          {
            "node": "Get sync_state (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },

    // RESOURCE
    "Get sync_state (resource)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (resource)": {
      "main": [
        [
          {
            "node": "HTTP - Recursos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Recursos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar Recursos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar Recursos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert)": {
      "main": [
        [
          {
            "node": "Pack batch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource (Supabase REST)": {
      "main": [
        [
          {
            "node": "Get sync_state (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource)": {
      "main": [
        [
          {
            "node": "Get sync_state (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },

    // TEAM
    "Get sync_state (team)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (team)": {
      "main": [
        [
          {
            "node": "HTTP - ProyectosEquipos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - ProyectosEquipos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosEquipos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosEquipos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert team)": {
      "main": [
        [
          {
            "node": "Pack batch (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (team)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_team (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_team (Supabase REST)": {
      "main": [
        [
          {
            "node": "Get sync_state (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (team)": {
      "main": [
        [
          {
            "node": "Update sync_state (team)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (team)": {
      "main": [
        [
          {
            "node": "Get sync_state (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },

    // RESOURCE COST
    "Get sync_state (resource_cost)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (resource_cost)": {
      "main": [
        [
          {
            "node": "HTTP - RecursosCostos (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - RecursosCostos (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar RecursosCostos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar RecursosCostos": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert resource_cost)": {
      "main": [
        [
          {
            "node": "Pack batch (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (resource_cost)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert resource_cost (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert resource_cost (Supabase REST)": {
      "main": [
        [
          {
            "node": "Get sync_state (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (resource_cost)": {
      "main": [
        [
          {
            "node": "Update sync_state (resource_cost)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (resource_cost)": {
      "main": [
        [
          {
            "node": "Get sync_state (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },

    // TASKS
    "Get sync_state (tasks)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (tasks)": {
      "main": [
        [
          {
            "node": "HTTP - ProyectosTareas (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - ProyectosTareas (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar ProyectosTareas",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar ProyectosTareas": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert tasks)": {
      "main": [
        [
          {
            "node": "Pack batch (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (tasks)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert job_task (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert job_task (Supabase REST)": {
      "main": [
        [
          {
            "node": "Get sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute now ISO (tasks)": {
      "main": [
        [
          {
            "node": "Update sync_state (tasks)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (tasks)": {
      "main": [
        [
          {
            "node": "Get sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },

    // CALENDAR
    "Get sync_state (calendar)": {
      "main": [
        [
          {
            "node": "Compute last_sync ISO (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute last_sync ISO (calendar)": {
      "main": [
        [
          {
            "node": "HTTP - CalendarPeriodDays (filtrado)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - CalendarPeriodDays (filtrado)": {
      "main": [
        [
          {
            "node": "Transformar CalendarPeriodDays",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute now ISO (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformar CalendarPeriodDays": {
      "main": [
        [
          {
            "node": "Split In Batches (upsert calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches (upsert calendar)": {
      "main": [
        [
          {
            "node": "Pack batch (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pack batch (calendar)": {
      "main": [
        [
          {
            "node": "HTTP - Upsert calendar_period_days (Supabase REST)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Upsert calendar_period_days (Supabase REST)": {
      "main": [
        [
        ]
      ]
    },
    "Compute now ISO (calendar)": {
      "main": [
        [
          {
            "node": "Update sync_state (calendar)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update sync_state (calendar)": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e1fc7993-44a1-44c7-9bb6-0fe503a39890",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5f4a76193498dfc211473f5de0a4e75faf68e0d1feb31e98054dc9c9b3f6aa8c"
  },
  "id": "OZqH757Z0M6kEAda",
  "tags": []
}
