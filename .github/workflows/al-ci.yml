# yaml-language-server: $schema=./allow-any.json
name: AL CI

on:
  push:
    branches: [main, develop, "feature/**"]
    paths:
      - "Power_Solution_BC/**"
      - ".github/workflows/al-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "Power_Solution_BC/**"
      - ".github/workflows/al-ci.yml"
  workflow_dispatch:
    inputs:
      doDeploy:
        description: "Deploy to Sandbox?"
        required: false
        type: boolean
        default: true
      bumpVersion:
        description: "Bump app.json patch version?"
        required: false
        type: boolean
        default: true

permissions:
  contents: write

concurrency:
  group: al-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validar app.json
        run: |
          if [ ! -f Power_Solution_BC/app.json ]; then
            echo "Falta Power_Solution_BC/app.json"; exit 1; fi
          node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync('Power_Solution_BC/app.json','utf8')); const req=['id','name','publisher','version']; const missing=req.filter(k=>!j[k]); if(missing.length){console.error('app.json faltan claves:',missing.join(',')); process.exit(1);} console.log('app.json OK');"

      - name: Verificar archivos .al
        run: |
          set -e
          cnt=$(find Power_Solution_BC -name '*.al' | wc -l | tr -d ' ')
          if [ "$cnt" = "0" ]; then
            echo "No se encontraron archivos .al en Power_Solution_BC"; exit 1; fi
          echo "Encontrados $cnt archivos .al"

      - name: Subir artefacto de fuentes AL
        uses: actions/upload-artifact@v4
        with:
          name: al-sources
          path: |
            Power_Solution_BC/**/*.al
            Power_Solution_BC/app.json
            Power_Solution_BC/Translations/**

  compile:
    needs: validate
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Mostrar entorno
        run: |
          echo "Runner: %RUNNER_OS%"
          echo "Branch: $env:GITHUB_REF"
        shell: pwsh

      - name: Comprobar BC_AUTHCONTEXT
        id: check_secret
        shell: pwsh
        env:
          BC_AUTHCONTEXT: ${{ secrets.BC_AUTHCONTEXT }}
        run: |
          if (-not $env:BC_AUTHCONTEXT) { "has=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Append } else { "has=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append }

      - name: Omitir compilación si no hay secretos
        if: ${{ steps.check_secret.outputs.has != 'true' }}
        run: echo "Sin secreto BC_AUTHCONTEXT configurado. Se omite compilación AL."

      - name: Compilar AL con AL-Go RunPipeline
        if: ${{ steps.check_secret.outputs.has == 'true' }}
        uses: microsoft/AL-Go-Actions/RunPipeline@main
        with:
          authContext: ${{ secrets.BC_AUTHCONTEXT }}
          appFolders: '["Power_Solution_BC"]'
          doNotRunTests: true
          doNotPublishArtifacts: false

      - name: Listar paquetes .app generados
        if: ${{ steps.check_secret.outputs.has == 'true' }}
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter *.app | ForEach-Object { Write-Host $_.FullName }

      - name: Subir artefactos .app
        if: ${{ steps.check_secret.outputs.has == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: al-apps
          path: |
            Power_Solution_BC/**/*.app
            Power_Solution_BC/app.json

  deploy:
    needs: compile
    if: github.ref == 'refs/heads/main' && github.event.inputs.doDeploy != 'false'
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Comprobar BC_AUTHCONTEXT
        id: check_secret_deploy
        shell: pwsh
        env:
          BC_AUTHCONTEXT: ${{ secrets.BC_AUTHCONTEXT }}
        run: |
          if (-not $env:BC_AUTHCONTEXT) { "has=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Append } else { "has=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append }

      - name: Omitir deploy si no hay secretos
        if: ${{ steps.check_secret_deploy.outputs.has != 'true' }}
        run: echo "Sin secreto BC_AUTHCONTEXT. Se omite deploy."

      - name: Desplegar a Sandbox Pruebas_PS
        if: ${{ steps.check_secret_deploy.outputs.has == 'true' }}
        uses: microsoft/AL-Go-Actions/Deploy@main
        with:
          authContext: ${{ secrets.BC_AUTHCONTEXT }}
          appFolders: '["Power_Solution_BC"]'

  version:
    needs: compile
    if: github.ref == 'refs/heads/main' && github.event.inputs.bumpVersion != 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump patch en app.json y commit [skip ci]
        run: |
          node -e "const fs=require('fs');const p='Power_Solution_BC/app.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));const v=j.version||'1.0.0.0';const parts=v.split('.').map(n=>parseInt(n||'0',10));parts[2]=parts[2]+1; j.version=[parts[0],parts[1],parts[2],(parts[3]||0)].join('.'); fs.writeFileSync(p,JSON.stringify(j,null,2)+'\n'); console.log('Nueva versión:', j.version);"
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add Power_Solution_BC/app.json
          git commit -m "ci(version): bump app.json [skip ci]" || echo "Sin cambios que commitear"
          git push || echo "Sin cambios que empujar"
